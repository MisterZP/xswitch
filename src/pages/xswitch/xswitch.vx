<div class="xswitch-wrapper">
  <div class="xswitch-left-area">
    <ul class="xswitch-tabs" ref="tabs">
      <li x-for={items} x-each='item' @click='setEditingKey' class.editing={item.id === editingKey}>
        <Checkbox checked={item.active} @change='setActive' disabled={item.id === '0'}/><span class="label">&nbsp;{item.name}</span>
        <Popconfirm
          title={"Are you sure to delete?"}
          @confirm="remove"
        >
        <Icon
          class="delete-icon"
          type="delete"
          theme="outlined"
          style.color="#f5222d"
        />
        </Popconfirm>
      </li>
    </ul>
    <div class="xswitch-new-item-container">
      <Input
        size="small"
        autoComplete="off"
        placeholder="Add a rule"
        class="new-item"
        x-model={newItem}
        @keyUp.enter="add"
        />
        <Icon class="confirm-button" type="edit" theme="twoTone" @click="add" />
    </div>
  </div>
  <div class="xswitch-container" ref="shell">
    <div class="form-container-mask" style={{ display: editMode === 'form' ? 'block' : 'none' }}>
      <div class="form-container">
        <div class="form-main">
          <Collapse
            defaultActiveKey={['proxy']}
            @change={togglePanel}
          >
            <Collapse.Panel
              header={
                <Badge
                  count={proxyRules.length}
                  showZero
                  offset={[10, 0]}
                  >Proxy
                </Badge>}
              key="proxy">
              <div class="proxy-rules">
                {proxyRules.length ? '' : <i>No proxy rules</i>}
                <table x-if={proxyRules.length > 0} class="proxy-rules-table" border="none">
                  <thead>
                    <th>Pattern</th>
                    <th>Target</th>
                    <th width="114">Control</th>
                  </thead>
                  <tbody>
                    <tr x-for={proxyRules} x-each="item,index">
                      <td style={{ width: 280 }} @doubleClick={(ev) => {
                          ev.preventDefault();
                          if (!currentEditIndexes['pattern'].includes(index)) {
                            switchRowItemEditMode(index, 'pattern');
                          }
                        }}>
                        <span x-if={currentEditIndexes['pattern'].includes(index)}>
                          <Input size="small" class="table-inp" x-model={item[0]} @keyUp.enter={(ev) => {
                            if (ev.target.value.trim() === '') {
                              showErrorMessage('Proxy pattern is invalid');
                              return;
                            }
                            switchRowItemEditMode(index, 'pattern');
                          }} />
                        </span>
                        <span x-else>
                          {item[0]}
                        </span>
                        <span style={{ float: 'right' }}>
                          <Icon
                            type={currentEditIndexes['pattern'].includes(index) ? '' : 'edit'}
                            theme="twoTone"
                            @click={() => {
                              switchRowItemEditMode(index, 'pattern');
                            }}
                          />
                        </span>
                      </td>
                      <td style={{ width: 280 }} @doubleClick={(ev) => {
                          ev.preventDefault();
                          if (!currentEditIndexes['target'].includes(index)) {
                            switchRowItemEditMode(index, 'target');
                          }
                        }}>
                        <span x-if={currentEditIndexes['target'].includes(index)}>
                          <Input size="small" class="table-inp" x-model={item[1]} @keyUp.enter={(ev) => {
                            if (ev.target.value.trim() === '') {
                              showErrorMessage('Proxy target is invalid');
                              return;
                            }
                            switchRowItemEditMode(index, 'target');
                          }} />
                        </span>
                        <span x-else>
                          {item[1]}
                        </span>
                        <span style={{ float: 'right' }}>
                          <Icon
                            type={currentEditIndexes['target'].includes(index) ? '' : 'edit'}
                            theme="twoTone"
                            @click={() => {
                              switchRowItemEditMode(index, 'target');
                            }}
                          />
                        </span>
                      </td>
                      <td>
                        <Tooltip title="move up rule">
                          <Icon style={{ marginRight: 5 }} x-if={index > 0} type="up-circle" theme="twoTone" @click={(e, actionCtx) => {
                            moveUpProxyRule(+index);
                          }} />
                        </Tooltip>
                        <Tooltip title="move down rule">
                          <Icon style={{ marginRight: 5 }} x-if={+index < proxyRules.length - 1} theme="twoTone" type="down-circle" @click={(e, actionCtx) => {
                            moveDownProxyRule(+index);
                          }} />
                        </Tooltip>
                        |
                        <Tooltip title="copy rule">
                          <Icon style={{ marginLeft: 5, marginRight: 5 }} theme="twoTone" type="copy" @click={(e, actionCtx) => {
                            copyProxyRule(+index);
                          }} />
                        </Tooltip>
                        |
                        <Tooltip title="remove rule">
                          <Icon style={{ marginLeft: 5, marginRight: 5 }} twoToneColor="#f20" theme="twoTone" type="delete" onClick={(e, actionCtx) => {
                            removeProxyRule(index);
                          }} />
                        </Tooltip>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
              <Row style={{ marginTop: 10 }}>
                <Col span={11}>
                  <Input
                    ref="proxyPattern"
                    size="small"
                    placeholder="Proxy pattern"
                    x-model={newProxyPattern}
                    @keyUp.enter={(ev) => {
                      if (ev.target.value.trim() === '') {
                        showErrorMessage('Proxy pattern is invalid.');
                        return;
                      }
                      this.$refs.proxyTarget.focus();
                    }}
                  />
                </Col>
                <Col span={2} style={{ textAlign: 'center' }}>
                 <Icon type="right-circle" theme="twoTone" />&nbsp;
                </Col>
                <Col span={11}>
                  <Input
                    size="small"
                    ref="proxyTarget"
                    placeholder="Proxy target, add with Enter"
                    x-model={newProxyTarget}
                    @keyUp.enter="addNewProxyRule"
                  />
                </Col>
              </Row>
            </Collapse.Panel>
            <Collapse.Panel header={<Badge count={corsItems.length} showZero offset={[10, 0]}>CORS</Badge>} key="cors">
              {corsItems.length ? '' : <i>No CORS rules</i>}
              <Tag key={key} x-for={corsItems} x-each='item,key' closable @close={removeCors}>
                {item}
              </Tag>
              <Row style={{ marginTop: 10 }}>
                <Input size="small" placeholder="Add a new CORS rule with Enter" x-model={newCors} @keyUp.enter="addNewCors" />
              </Row>
            </Collapse.Panel>
            <Collapse.Panel header={<Badge count={enableItems.length} showZero offset={[10, 0]}>Enable</Badge>} key="enable">
              {enableItems.length ? '' : <i>No enable rules</i>}
              <Tag key={key} x-for={enableItems} x-each='item,key' closable @close={removeEnable}>
                {item}
              </Tag>
              <Row style={{ marginTop: 10 }}>
                <Input size="small" placeholder="Add a new enable rule with Enter" x-model={newEnable} @keyUp.enter="addNewEnable" />
              </Row>
            </Collapse.Panel>
          </Collapse>
          <Row style={{ marginTop: 10 }}>
            <Col offset={16} span={8}>
              <Button size="small" type="default" @click="hideForm">
                Cancel
              </Button>
              <Button size="small" type="primary" @click={() => {
                if (currentEditIndexes['pattern'].length || currentEditIndexes['target'].length) {
                  showErrorMessage('Please confirm your changes in proxy rules.');
                  return;
                }
                switchEditMode();
              }} style={{ marginLeft: 10 }}>
                <Icon type="save" /> Save
              </Button>
            </Col>
          </Row>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="toolbar-area-top">
  <Switch
    checkedChildren={<Icon type="check" />}
    unCheckedChildren={<Icon type="close" />}
    checked={checked}
    @change="toggleButton"
  />
  <Tooltip arrowPointAtCenter title="Open help page" placement="bottom">
    <Icon type="question-circle" theme="twoTone" style={{ fontSize: '22px'}} @click="openReadme"/>
  </Tooltip>
</div>
<div class="toolbar-area-bottom">
  <Tooltip arrowPointAtCenter title="Switch mode (Alt+Shift+M)">
    <Icon type="interaction" theme="twoTone" style={{ fontSize: '22px'}} @click="switchEditMode" />
  </Tooltip>
  <Tooltip arrowPointAtCenter title="Format code (Alt+Shift+F)">
    <Icon type="file-text" theme="twoTone" style={{ fontSize: '22px'}} @click="formatCode" />
  </Tooltip>
  <Tooltip arrowPointAtCenter title="Open in new tab">
    <Icon type="code" theme="twoTone" style={{ fontSize: '22px'}} @click="openNewTab"/>
  </Tooltip>
</div>
