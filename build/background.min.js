/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/__assets/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/background.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/arrayWithoutHoles.js":
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/classCallCheck.js":
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/createClass.js":
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/defineProperty.js":
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/iterableToArray.js":
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/nonIterableSpread.js":
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/toConsumableArray.js":
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/iterableToArray.js");

var nonIterableSpread = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/typeof.js":
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/_punycode@1.4.1@punycode/punycode.js":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/typeof.js");

/*! https://mths.be/punycode v1.4.1 by @mathias */
;

(function (root) {
  /** Detect free variables */
  var freeExports = ( false ? undefined : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;
  var freeModule = ( false ? undefined : _typeof(module)) == 'object' && module && !module.nodeType && module;
  var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof(global)) == 'object' && global;

  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
    root = freeGlobal;
  }
  /**
   * The `punycode` object.
   * @name punycode
   * @type Object
   */


  var punycode,

  /** Highest positive signed 32-bit float value */
  maxInt = 2147483647,
      // aka. 0x7FFFFFFF or 2^31-1

  /** Bootstring parameters */
  base = 36,
      tMin = 1,
      tMax = 26,
      skew = 38,
      damp = 700,
      initialBias = 72,
      initialN = 128,
      // 0x80
  delimiter = '-',
      // '\x2D'

  /** Regular expressions */
  regexPunycode = /^xn--/,
      regexNonASCII = /[^\x20-\x7E]/,
      // unprintable ASCII chars + non-ASCII chars
  regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
      // RFC 3490 separators

  /** Error messages */
  errors = {
    'overflow': 'Overflow: input needs wider integers to process',
    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    'invalid-input': 'Invalid input'
  },

  /** Convenience shortcuts */
  baseMinusTMin = base - tMin,
      floor = Math.floor,
      stringFromCharCode = String.fromCharCode,

  /** Temporary variable */
  key;
  /*--------------------------------------------------------------------------*/

  /**
   * A generic error utility function.
   * @private
   * @param {String} type The error type.
   * @returns {Error} Throws a `RangeError` with the applicable error message.
   */

  function error(type) {
    throw new RangeError(errors[type]);
  }
  /**
   * A generic `Array#map` utility function.
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function that gets called for every array
   * item.
   * @returns {Array} A new array of values returned by the callback function.
   */


  function map(array, fn) {
    var length = array.length;
    var result = [];

    while (length--) {
      result[length] = fn(array[length]);
    }

    return result;
  }
  /**
   * A simple `Array#map`-like wrapper to work with domain name strings or email
   * addresses.
   * @private
   * @param {String} domain The domain name or email address.
   * @param {Function} callback The function that gets called for every
   * character.
   * @returns {Array} A new string of characters returned by the callback
   * function.
   */


  function mapDomain(string, fn) {
    var parts = string.split('@');
    var result = '';

    if (parts.length > 1) {
      // In email addresses, only the domain name should be punycoded. Leave
      // the local part (i.e. everything up to `@`) intact.
      result = parts[0] + '@';
      string = parts[1];
    } // Avoid `split(regex)` for IE8 compatibility. See #17.


    string = string.replace(regexSeparators, '\x2E');
    var labels = string.split('.');
    var encoded = map(labels, fn).join('.');
    return result + encoded;
  }
  /**
   * Creates an array containing the numeric code points of each Unicode
   * character in the string. While JavaScript uses UCS-2 internally,
   * this function will convert a pair of surrogate halves (each of which
   * UCS-2 exposes as separate characters) into a single code point,
   * matching UTF-16.
   * @see `punycode.ucs2.encode`
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode.ucs2
   * @name decode
   * @param {String} string The Unicode input string (UCS-2).
   * @returns {Array} The new array of code points.
   */


  function ucs2decode(string) {
    var output = [],
        counter = 0,
        length = string.length,
        value,
        extra;

    while (counter < length) {
      value = string.charCodeAt(counter++);

      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
        // high surrogate, and there is a next character
        extra = string.charCodeAt(counter++);

        if ((extra & 0xFC00) == 0xDC00) {
          // low surrogate
          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
        } else {
          // unmatched surrogate; only append this code unit, in case the next
          // code unit is the high surrogate of a surrogate pair
          output.push(value);
          counter--;
        }
      } else {
        output.push(value);
      }
    }

    return output;
  }
  /**
   * Creates a string based on an array of numeric code points.
   * @see `punycode.ucs2.decode`
   * @memberOf punycode.ucs2
   * @name encode
   * @param {Array} codePoints The array of numeric code points.
   * @returns {String} The new Unicode string (UCS-2).
   */


  function ucs2encode(array) {
    return map(array, function (value) {
      var output = '';

      if (value > 0xFFFF) {
        value -= 0x10000;
        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
        value = 0xDC00 | value & 0x3FF;
      }

      output += stringFromCharCode(value);
      return output;
    }).join('');
  }
  /**
   * Converts a basic code point into a digit/integer.
   * @see `digitToBasic()`
   * @private
   * @param {Number} codePoint The basic numeric code point value.
   * @returns {Number} The numeric value of a basic code point (for use in
   * representing integers) in the range `0` to `base - 1`, or `base` if
   * the code point does not represent a value.
   */


  function basicToDigit(codePoint) {
    if (codePoint - 48 < 10) {
      return codePoint - 22;
    }

    if (codePoint - 65 < 26) {
      return codePoint - 65;
    }

    if (codePoint - 97 < 26) {
      return codePoint - 97;
    }

    return base;
  }
  /**
   * Converts a digit/integer into a basic code point.
   * @see `basicToDigit()`
   * @private
   * @param {Number} digit The numeric value of a basic code point.
   * @returns {Number} The basic code point whose value (when used for
   * representing integers) is `digit`, which needs to be in the range
   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
   * used; else, the lowercase form is used. The behavior is undefined
   * if `flag` is non-zero and `digit` has no uppercase form.
   */


  function digitToBasic(digit, flag) {
    //  0..25 map to ASCII a..z or A..Z
    // 26..35 map to ASCII 0..9
    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
  }
  /**
   * Bias adaptation function as per section 3.4 of RFC 3492.
   * https://tools.ietf.org/html/rfc3492#section-3.4
   * @private
   */


  function adapt(delta, numPoints, firstTime) {
    var k = 0;
    delta = firstTime ? floor(delta / damp) : delta >> 1;
    delta += floor(delta / numPoints);

    for (;
    /* no initialization */
    delta > baseMinusTMin * tMax >> 1; k += base) {
      delta = floor(delta / baseMinusTMin);
    }

    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
  }
  /**
   * Converts a Punycode string of ASCII-only symbols to a string of Unicode
   * symbols.
   * @memberOf punycode
   * @param {String} input The Punycode string of ASCII-only symbols.
   * @returns {String} The resulting string of Unicode symbols.
   */


  function decode(input) {
    // Don't use UCS-2
    var output = [],
        inputLength = input.length,
        out,
        i = 0,
        n = initialN,
        bias = initialBias,
        basic,
        j,
        index,
        oldi,
        w,
        k,
        digit,
        t,

    /** Cached calculation results */
    baseMinusT; // Handle the basic code points: let `basic` be the number of input code
    // points before the last delimiter, or `0` if there is none, then copy
    // the first basic code points to the output.

    basic = input.lastIndexOf(delimiter);

    if (basic < 0) {
      basic = 0;
    }

    for (j = 0; j < basic; ++j) {
      // if it's not a basic code point
      if (input.charCodeAt(j) >= 0x80) {
        error('not-basic');
      }

      output.push(input.charCodeAt(j));
    } // Main decoding loop: start just after the last delimiter if any basic code
    // points were copied; start at the beginning otherwise.


    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)
    /* no final expression */
    {
      // `index` is the index of the next character to be consumed.
      // Decode a generalized variable-length integer into `delta`,
      // which gets added to `i`. The overflow checking is easier
      // if we increase `i` as we go, then subtract off its starting
      // value at the end to obtain `delta`.
      for (oldi = i, w = 1, k = base;;
      /* no condition */
      k += base) {
        if (index >= inputLength) {
          error('invalid-input');
        }

        digit = basicToDigit(input.charCodeAt(index++));

        if (digit >= base || digit > floor((maxInt - i) / w)) {
          error('overflow');
        }

        i += digit * w;
        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

        if (digit < t) {
          break;
        }

        baseMinusT = base - t;

        if (w > floor(maxInt / baseMinusT)) {
          error('overflow');
        }

        w *= baseMinusT;
      }

      out = output.length + 1;
      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,
      // incrementing `n` each time, so we'll fix that now:

      if (floor(i / out) > maxInt - n) {
        error('overflow');
      }

      n += floor(i / out);
      i %= out; // Insert `n` at position `i` of the output

      output.splice(i++, 0, n);
    }

    return ucs2encode(output);
  }
  /**
   * Converts a string of Unicode symbols (e.g. a domain name label) to a
   * Punycode string of ASCII-only symbols.
   * @memberOf punycode
   * @param {String} input The string of Unicode symbols.
   * @returns {String} The resulting Punycode string of ASCII-only symbols.
   */


  function encode(input) {
    var n,
        delta,
        handledCPCount,
        basicLength,
        bias,
        j,
        m,
        q,
        k,
        t,
        currentValue,
        output = [],

    /** `inputLength` will hold the number of code points in `input`. */
    inputLength,

    /** Cached calculation results */
    handledCPCountPlusOne,
        baseMinusT,
        qMinusT; // Convert the input in UCS-2 to Unicode

    input = ucs2decode(input); // Cache the length

    inputLength = input.length; // Initialize the state

    n = initialN;
    delta = 0;
    bias = initialBias; // Handle the basic code points

    for (j = 0; j < inputLength; ++j) {
      currentValue = input[j];

      if (currentValue < 0x80) {
        output.push(stringFromCharCode(currentValue));
      }
    }

    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;
    // `basicLength` is the number of basic code points.
    // Finish the basic string - if it is not empty - with a delimiter

    if (basicLength) {
      output.push(delimiter);
    } // Main encoding loop:


    while (handledCPCount < inputLength) {
      // All non-basic code points < n have been handled already. Find the next
      // larger one:
      for (m = maxInt, j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue >= n && currentValue < m) {
          m = currentValue;
        }
      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
      // but guard against overflow


      handledCPCountPlusOne = handledCPCount + 1;

      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
        error('overflow');
      }

      delta += (m - n) * handledCPCountPlusOne;
      n = m;

      for (j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue < n && ++delta > maxInt) {
          error('overflow');
        }

        if (currentValue == n) {
          // Represent delta as a generalized variable-length integer
          for (q = delta, k = base;;
          /* no condition */
          k += base) {
            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

            if (q < t) {
              break;
            }

            qMinusT = q - t;
            baseMinusT = base - t;
            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
            q = floor(qMinusT / baseMinusT);
          }

          output.push(stringFromCharCode(digitToBasic(q, 0)));
          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
          delta = 0;
          ++handledCPCount;
        }
      }

      ++delta;
      ++n;
    }

    return output.join('');
  }
  /**
   * Converts a Punycode string representing a domain name or an email address
   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
   * it doesn't matter if you call it on a string that has already been
   * converted to Unicode.
   * @memberOf punycode
   * @param {String} input The Punycoded domain name or email address to
   * convert to Unicode.
   * @returns {String} The Unicode representation of the given Punycode
   * string.
   */


  function toUnicode(input) {
    return mapDomain(input, function (string) {
      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
    });
  }
  /**
   * Converts a Unicode string representing a domain name or an email address to
   * Punycode. Only the non-ASCII parts of the domain name will be converted,
   * i.e. it doesn't matter if you call it with a domain that's already in
   * ASCII.
   * @memberOf punycode
   * @param {String} input The domain name or email address to convert, as a
   * Unicode string.
   * @returns {String} The Punycode representation of the given domain name or
   * email address.
   */


  function toASCII(input) {
    return mapDomain(input, function (string) {
      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
    });
  }
  /*--------------------------------------------------------------------------*/

  /** Define the public API */


  punycode = {
    /**
     * A string representing the current Punycode.js version number.
     * @memberOf punycode
     * @type String
     */
    'version': '1.4.1',

    /**
     * An object of methods to convert from JavaScript's internal character
     * representation (UCS-2) to Unicode code points, and back.
     * @see <https://mathiasbynens.be/notes/javascript-encoding>
     * @memberOf punycode
     * @type Object
     */
    'ucs2': {
      'decode': ucs2decode,
      'encode': ucs2encode
    },
    'decode': decode,
    'encode': encode,
    'toASCII': toASCII,
    'toUnicode': toUnicode
  };
  /** Expose `punycode` */
  // Some AMD build optimizers, like r.js, check for specific condition patterns
  // like the following:

  if ( true && _typeof(__webpack_require__("./node_modules/_webpack@4.40.2@webpack/buildin/amd-options.js")) == 'object' && __webpack_require__("./node_modules/_webpack@4.40.2@webpack/buildin/amd-options.js")) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return punycode;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (freeExports && freeModule) {
    if (module.exports == freeExports) {
      // in Node.js, io.js, or RingoJS v0.8.0+
      freeModule.exports = punycode;
    } else {
      // in Narwhal or RingoJS v0.7.0-
      for (key in punycode) {
        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
      }
    }
  } else {
    // in Rhino or a web browser
    root.punycode = punycode;
  }
})(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/_webpack@4.40.2@webpack/buildin/module.js")(module), __webpack_require__("./node_modules/_webpack@4.40.2@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/_querystring-es3@0.2.1@querystring-es3/decode.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
 // If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function (qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);
  var maxKeys = 1000;

  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count

  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr,
        vstr,
        k,
        v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

/***/ }),

/***/ "./node_modules/_querystring-es3@0.2.1@querystring-es3/encode.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var _typeof = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/typeof.js");

var stringifyPrimitive = function stringifyPrimitive(v) {
  switch (_typeof(v)) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function (obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';

  if (obj === null) {
    obj = undefined;
  }

  if (_typeof(obj) === 'object') {
    return map(objectKeys(obj), function (k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;

      if (isArray(obj[k])) {
        return map(obj[k], function (v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);
  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map(xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];

  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }

  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }

  return res;
};

/***/ }),

/***/ "./node_modules/_querystring-es3@0.2.1@querystring-es3/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__("./node_modules/_querystring-es3@0.2.1@querystring-es3/decode.js");
exports.encode = exports.stringify = __webpack_require__("./node_modules/_querystring-es3@0.2.1@querystring-es3/encode.js");

/***/ }),

/***/ "./node_modules/_url@0.11.0@url/url.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var _typeof = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/typeof.js");

var punycode = __webpack_require__("./node_modules/_punycode@1.4.1@punycode/punycode.js");

var util = __webpack_require__("./node_modules/_url@0.11.0@url/util.js");

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;
exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
} // Reference: RFC 3986, RFC 1808, RFC 2396
// define these here so at least they only have to be
// compiled once on the first module load.


var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,
    // Special case for a simple path URL
simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
    // RFC 2396: characters reserved for delimiting URLs.
// We actually just auto-escape these.
delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
    // RFC 2396: characters not allowed for various reasons.
unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
// Note that any invalid chars are also handled, but these
// are the ones that are *expected* to be seen, so we fast-path
// them.
nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
unsafeProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that never have a hostname.
hostlessProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that always contain a // bit.
slashedProtocol = {
  'http': true,
  'https': true,
  'ftp': true,
  'gopher': true,
  'file': true,
  'http:': true,
  'https:': true,
  'ftp:': true,
  'gopher:': true,
  'file:': true
},
    querystring = __webpack_require__("./node_modules/_querystring-es3@0.2.1@querystring-es3/index.js");

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;
  var u = new Url();
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + _typeof(url));
  } // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916


  var queryIndex = url.indexOf('?'),
      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);
  var rest = url; // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"

  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);

    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];

      if (simplePath[2]) {
        this.search = simplePath[2];

        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }

      return this;
    }
  }

  var proto = protocolPattern.exec(rest);

  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  } // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.


  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';

    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c
    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.
    // find the first instance of any hostEndingChars
    var hostEnd = -1;

    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.


    var auth, atSign;

    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    } // Now we have a portion which is definitely the auth.
    // Pull that off.


    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    } // the host is the remaining to the left of the first non-host char


    hostEnd = -1;

    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // if we still have not hit it, then the entire thing is a host.


    if (hostEnd === -1) hostEnd = rest.length;
    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd); // pull out port.

    this.parseHost(); // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.

    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.

    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.

    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);

      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;

        if (!part.match(hostnamePartPattern)) {
          var newpart = '';

          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          } // we test again with ASCII char only


          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);

            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }

            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }

            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host; // strip [ and ] from the hostname
    // the host field still retains them, though

    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);

      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  } // now rest is set to the post-host stuff.
  // chop off any delim chars.


  if (!unsafeProtocol[lowerProto]) {
    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1) continue;
      var esc = encodeURIComponent(ae);

      if (esc === ae) {
        esc = escape(ae);
      }

      rest = rest.split(ae).join(esc);
    }
  } // chop off from the tail first.


  var hash = rest.indexOf('#');

  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }

  var qm = rest.indexOf('?');

  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);

    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }

    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }

  if (rest) this.pathname = rest;

  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
    this.pathname = '/';
  } //to support http.request


  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  } // finally, reconstruct the href based on what has been validated.


  this.href = this.format();
  return this;
}; // format a parsed object into a url string


function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function () {
  var auth = this.auth || '';

  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');

    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || query && '?' + query || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.

  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');
  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function (relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function (relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);

  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  } // hash is always overridden, no matter what.
  // even href="" will remove it.


  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.

  if (relative.href === '') {
    result.href = result.format();
    return result;
  } // hrefs like //foo/bar always cut to the protocol.


  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);

    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol') result[rkey] = relative[rkey];
    } //urlParse appends trailing / to urls like http://www.example.com


    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);

      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }

      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;

    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');

      while (relPath.length && !(relative.host = relPath.shift())) {
        ;
      }

      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }

    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port; // to support http.request

    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }

    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',
      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',
      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.

  if (psychotic) {
    result.hostname = '';
    result.port = null;

    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);
    }

    result.host = '';

    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;

      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);
      }

      relative.host = null;
    }

    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = relative.host || relative.host === '' ? relative.host : result.host;
    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath; // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }

    result.search = relative.search;
    result.query = relative.query; //to support http.request

    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
    }

    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null; //to support http.request

    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }

    result.href = result.format();
    return result;
  } // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.


  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0

  var up = 0;

  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];

    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  } // if the path is allowed to go above the root, restore leading ..s


  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back

  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || result.host && srcPath.length;

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  } //to support request.http


  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
  }

  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function () {
  var host = this.host;
  var port = portPattern.exec(host);

  if (port) {
    port = port[0];

    if (port !== ':') {
      this.port = port.substr(1);
    }

    host = host.substr(0, host.length - port.length);
  }

  if (host) this.hostname = host;
};

/***/ }),

/***/ "./node_modules/_url@0.11.0@url/util.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/typeof.js");

module.exports = {
  isString: function isString(arg) {
    return typeof arg === 'string';
  },
  isObject: function isObject(arg) {
    return _typeof(arg) === 'object' && arg !== null;
  },
  isNull: function isNull(arg) {
    return arg === null;
  },
  isNullOrUndefined: function isNullOrUndefined(arg) {
    return arg == null;
  }
};

/***/ }),

/***/ "./node_modules/_webpack@4.40.2@webpack/buildin/amd-options.js":
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "./node_modules/_webpack@4.40.2@webpack/buildin/global.js":
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/typeof.js");

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),

/***/ "./node_modules/_webpack@4.40.2@webpack/buildin/module.js":
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),

/***/ "./src/background.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/toConsumableArray.js");
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// EXTERNAL MODULE: ./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/defineProperty.js");
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ./src/constants.ts
var constants = __webpack_require__("./src/constants.ts");

// EXTERNAL MODULE: ./src/enums.ts
var enums = __webpack_require__("./src/enums.ts");

// EXTERNAL MODULE: ./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/classCallCheck.js");
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/createClass.js");
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// CONCATENATED MODULE: ./src/forward.ts




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




var forward_url = __webpack_require__("./node_modules/_url@0.11.0@url/url.js");
/**
 * get url type
 * @param url urls
 * @param reg rule
 */


var forward_matchUrl = function matchUrl(url, reg) {
  if (constants["P" /* REG */].FORWARD.test(reg)) {
    // support ??
    var r = new RegExp(reg.replace('??', '\\?\\?'), 'i');
    var matched = r.test(url);

    if (matched) {
      return enums["e" /* UrlType */].REG;
    }
  } else {
    var _matched = url.indexOf(reg) > -1;

    if (_matched) {
      return enums["e" /* UrlType */].STRING;
    }
  }

  return false;
};

function isCurrentDomainEnabled(enable, rawUrl) {
  var parsedTargetDomain = forward_url.parse(rawUrl).hostname;
  return enable.some(function (enabledDomain) {
    if (constants["P" /* REG */].FORWARD.test(enabledDomain)) {
      var r = new RegExp(enabledDomain.replace('??', '\\?\\?'), 'gi');
      var matched = r.test(rawUrl);
      return matched;
    } else {
      return rawUrl.toLowerCase().indexOf(enabledDomain.toLowerCase()) > -1;
    }
  });
}

var forward_Forward =
/*#__PURE__*/
function () {
  function Forward() {
    classCallCheck_default()(this, Forward);

    this._lastRequestId = null;
    this._disabled = enums["c" /* Enabled */].YES;
    this._config = {};
    this._originRequest = new Map();
    this._originRequestHeaders = new Map();
    this._urls = new Array(200); // for cache
  }

  createClass_default()(Forward, [{
    key: "onHeadersReceivedCallback",
    // Breaking the CORS Limitation
    value: function onHeadersReceivedCallback(details) {
      var cors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      // has cors rules
      var corsMap = this.config.cors;
      var corsMatched = false;

      if (corsMap && corsMap.length) {
        corsMap.forEach(function (rule) {
          if (forward_matchUrl(details.url, rule)) {
            corsMatched = true;
          }
        });
      }

      var disabled = this.disabled === enums["c" /* Enabled */].NO || !cors || !corsMatched;

      if (disabled) {
        return {};
      }

      var originUrl = details.url;
      var resHeaders = [];
      var CORSOrigin = (this._originRequest.get(details.requestId) ? this._originRequest.get(details.requestId) : details.initiator) || constants["o" /* DEFAULT_CORS_ORIGIN */];

      if (details.responseHeaders && details.responseHeaders.filter) {
        var hasCredentials = false;
        var tempOrigin = constants["v" /* EMPTY_STRING */];
        resHeaders = details.responseHeaders.filter(function (responseHeader) {
          // Already has access-control-allow-origin headers
          if (constants["i" /* CORS */].ORIGIN === responseHeader.name.toLowerCase()) {
            tempOrigin = responseHeader.value;
          }

          if (constants["i" /* CORS */].CREDENTIALS === responseHeader.name.toLowerCase()) {
            hasCredentials = responseHeader.value;
          }

          if ([constants["i" /* CORS */].ORIGIN, constants["i" /* CORS */].CREDENTIALS, constants["i" /* CORS */].METHODS, constants["i" /* CORS */].HEADERS].indexOf(responseHeader.name.toLowerCase()) < 0) {
            return true;
          }

          return false;
        }); // only when hasCredentials

        if (hasCredentials) {
          CORSOrigin = tempOrigin;
        }
      } // suck point


      if (CORSOrigin === constants["o" /* DEFAULT_CORS_ORIGIN */] && this._originRequest.get(details.requestId) === constants["J" /* NULL_STRING */]) {
        CORSOrigin = constants["o" /* DEFAULT_CORS_ORIGIN */];
      }

      resHeaders.push({
        name: constants["i" /* CORS */].ORIGIN,
        value: CORSOrigin
      });
      resHeaders.push({
        name: constants["i" /* CORS */].CREDENTIALS,
        value: constants["m" /* DEFAULT_CORS_CREDENTIALS */]
      });
      resHeaders.push({
        name: constants["i" /* CORS */].METHODS,
        value: constants["n" /* DEFAULT_CORS_METHODS */]
      });
      var CORSHeader = constants["v" /* EMPTY_STRING */];

      if (this._originRequestHeaders.get(details.requestId)) {
        CORSHeader = ',' + this._originRequestHeaders.get(details.requestId);
      }

      resHeaders.push({
        name: constants["i" /* CORS */].HEADERS,
        value: constants["p" /* DEFAULT_CREDENTIALS_RESPONSE_HEADERS */] + CORSHeader
      });
      return {
        responseHeaders: resHeaders
      };
    }
  }, {
    key: "redirectToMatchingRule",
    value: function redirectToMatchingRule(details) {
      var _this$config = this.config,
          rules = _this$config.proxy,
          enable = _this$config.enable;
      var redirectUrl = details.url; // in case of chrome-extension downtime

      if (!rules || !rules.length || constants["P" /* REG */].CHROME_EXTENSION.test(redirectUrl)) {
        return {};
      }

      if (enable && enable.length > 0) {
        var domainUrl = redirectUrl;

        if (details.initiator && details.initiator !== 'null') {
          domainUrl = details.initiator;
        }

        if (!isCurrentDomainEnabled(enable, domainUrl)) {
          return {};
        }
      }

      if (/http(s?):\/\/.*\.(js|css|json|jsonp)/.test(redirectUrl) && this._urls.indexOf(redirectUrl) < 0) {
        this._urls.shift();

        this._urls.push(redirectUrl);
      }

      try {
        for (var i = 0; i < rules.length; i++) {
          var rule = rules[i];

          if (rule && rule[0] && typeof rule[1] === 'string') {
            var reg = rule[0];
            var matched = forward_matchUrl(redirectUrl, reg);

            if (details.requestId !== this._lastRequestId) {
              if (matched === enums["e" /* UrlType */].REG) {
                var r = new RegExp(reg.replace('??', '\\?\\?'), 'gi');
                redirectUrl = redirectUrl.replace(r, rule[1]);
              } else if (matched === enums["e" /* UrlType */].STRING) {
                redirectUrl = redirectUrl.split(rule[0]).join(rule[1]);
              }
            }
          }
        }
      } catch (e) {
        console.error('rule match error', e);
      }

      this._lastRequestId = details.requestId;
      return redirectUrl === details.url ? {} : {
        redirectUrl: redirectUrl
      };
    }
  }, {
    key: "onBeforeSendHeadersCallback",
    value: function onBeforeSendHeadersCallback(details) {
      var headers = [];

      for (var i = 0; i < details.requestHeaders.length; ++i) {
        var requestName = details.requestHeaders[i].name.toLowerCase();

        if (requestName === constants["K" /* ORIGIN */]) {
          this._originRequest.set(details.requestId, details.requestHeaders[i].value);
        } else if (requestName === constants["a" /* ACCESS_CONTROL_REQUEST_HEADERS */] || constants["P" /* REG */].X_HEADER.test(requestName)) {
          headers.push(requestName);
        }
      }

      if (headers.length) {
        this._originRequestHeaders.set(details.requestId, headers.join(','));
      }

      return {
        requestHeaders: details.requestHeaders
      };
    }
  }, {
    key: "onBeforeRequestCallback",
    value: function onBeforeRequestCallback(details) {
      return this.redirectToMatchingRule(details);
    }
  }, {
    key: "urls",
    get: function get() {
      return this._urls;
    }
  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    },
    set: function set(newValue) {
      this._disabled = newValue;
    }
  }, {
    key: "config",
    get: function get() {
      return this._config;
    },
    set: function set(newValue) {
      this._config = _objectSpread({}, newValue);
    }
  }]);

  return Forward;
}();

if (!window._forward) {
  window._forward = new forward_Forward();
}

/* harmony default export */ var forward = (window._forward);
// EXTERNAL MODULE: ./src/chrome-storage.ts
var chrome_storage = __webpack_require__("./src/chrome-storage.ts");

// CONCATENATED MODULE: ./src/background.ts



var _, _2, _csmInstance$get, _csmInstance$get2;

function background_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function background_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { background_ownKeys(source, true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { background_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }





var csmInstance = new chrome_storage["a" /* ChromeStorageManager */]({
  useChromeStorageSyncFn: constants["X" /* USE_CHROME_STORAGE_SYNC_FN */]
});
var clearRunning = false;
var clearCacheEnabled = true;
var corsEnabled = true;
var parseError = false;
var jsonActiveKeys = ['0'];
var conf = {
  0: (_ = {}, defineProperty_default()(_, constants["O" /* PROXY_STORAGE_KEY */], []), defineProperty_default()(_, constants["k" /* CORS_STORAGE */], []), _)
};
csmInstance.get((_csmInstance$get = {}, defineProperty_default()(_csmInstance$get, constants["B" /* JSON_CONFIG */], {
  0: (_2 = {}, defineProperty_default()(_2, constants["O" /* PROXY_STORAGE_KEY */], []), defineProperty_default()(_2, constants["k" /* CORS_STORAGE */], []), _2)
}), defineProperty_default()(_csmInstance$get, constants["b" /* ACTIVE_KEYS */], ['0']), _csmInstance$get), function (result) {
  jsonActiveKeys = result[constants["b" /* ACTIVE_KEYS */]];

  if (result && result[constants["B" /* JSON_CONFIG */]]) {
    conf = result[constants["B" /* JSON_CONFIG */]];
    var config = getActiveConfig(conf);
    forward[constants["B" /* JSON_CONFIG */]] = background_objectSpread({}, config);
  } else {
    var _forward$JSON_CONFIG;

    forward[constants["B" /* JSON_CONFIG */]] = (_forward$JSON_CONFIG = {}, defineProperty_default()(_forward$JSON_CONFIG, constants["O" /* PROXY_STORAGE_KEY */], []), defineProperty_default()(_forward$JSON_CONFIG, constants["k" /* CORS_STORAGE */], []), _forward$JSON_CONFIG);
    parseError = false;
  }
});

function getActiveConfig(config) {
  var activeKeys = toConsumableArray_default()(jsonActiveKeys);

  var json = config['0'];
  activeKeys.forEach(function (key) {
    if (config[key] && key !== '0') {
      if (config[key][constants["O" /* PROXY_STORAGE_KEY */]]) {
        if (!json[constants["O" /* PROXY_STORAGE_KEY */]]) {
          json[constants["O" /* PROXY_STORAGE_KEY */]] = [];
        }

        json[constants["O" /* PROXY_STORAGE_KEY */]] = [].concat(toConsumableArray_default()(json[constants["O" /* PROXY_STORAGE_KEY */]]), toConsumableArray_default()(config[key][constants["O" /* PROXY_STORAGE_KEY */]]));
      }

      if (config[key][constants["k" /* CORS_STORAGE */]]) {
        if (!json[constants["k" /* CORS_STORAGE */]]) {
          json[constants["k" /* CORS_STORAGE */]] = [];
        }

        json[constants["k" /* CORS_STORAGE */]] = [].concat(toConsumableArray_default()(json[constants["k" /* CORS_STORAGE */]]), toConsumableArray_default()(config[key][constants["k" /* CORS_STORAGE */]]));
      }

      if (config[key][constants["w" /* ENABLE_DOMAIN_STORAGE */]]) {
        if (!json[constants["w" /* ENABLE_DOMAIN_STORAGE */]]) {
          json[constants["w" /* ENABLE_DOMAIN_STORAGE */]] = [];
        }

        json[constants["w" /* ENABLE_DOMAIN_STORAGE */]] = [].concat(toConsumableArray_default()(json[constants["w" /* ENABLE_DOMAIN_STORAGE */]]), toConsumableArray_default()(config[key][constants["w" /* ENABLE_DOMAIN_STORAGE */]]));
      }
    }
  });
  return json;
}

csmInstance.get((_csmInstance$get2 = {}, defineProperty_default()(_csmInstance$get2, constants["t" /* DISABLED */], enums["c" /* Enabled */].YES), defineProperty_default()(_csmInstance$get2, constants["h" /* CLEAR_CACHE_ENABLED */], enums["c" /* Enabled */].YES), defineProperty_default()(_csmInstance$get2, constants["j" /* CORS_ENABLED_STORAGE_KEY */], enums["c" /* Enabled */].YES), _csmInstance$get2), function (result) {
  forward[constants["t" /* DISABLED */]] = result[constants["t" /* DISABLED */]];
  clearCacheEnabled = result[constants["h" /* CLEAR_CACHE_ENABLED */]] === enums["c" /* Enabled */].YES;
  corsEnabled = result[constants["j" /* CORS_ENABLED_STORAGE_KEY */]] === enums["c" /* Enabled */].YES;
  setIcon();
});
chrome.storage.onChanged.addListener(function (changes) {
  var _3;

  if (changes[constants["b" /* ACTIVE_KEYS */]]) {
    jsonActiveKeys = changes[constants["b" /* ACTIVE_KEYS */]].newValue;
  }

  if (changes[constants["B" /* JSON_CONFIG */]]) {
    var config = getActiveConfig(changes[constants["B" /* JSON_CONFIG */]].newValue);
    forward[constants["B" /* JSON_CONFIG */]] = background_objectSpread({}, config);
  }

  if (changes[constants["t" /* DISABLED */]]) {
    forward[constants["t" /* DISABLED */]] = changes[constants["t" /* DISABLED */]].newValue;
  }

  if (changes[constants["h" /* CLEAR_CACHE_ENABLED */]]) {
    clearCacheEnabled = changes[constants["h" /* CLEAR_CACHE_ENABLED */]].newValue === enums["c" /* Enabled */].YES;
  }

  if (changes[constants["j" /* CORS_ENABLED_STORAGE_KEY */]]) {
    corsEnabled = changes[constants["j" /* CORS_ENABLED_STORAGE_KEY */]].newValue === enums["c" /* Enabled */].YES;
  }

  csmInstance.get(defineProperty_default()({}, constants["B" /* JSON_CONFIG */], {
    0: (_3 = {}, defineProperty_default()(_3, constants["O" /* PROXY_STORAGE_KEY */], []), defineProperty_default()(_3, constants["k" /* CORS_STORAGE */], []), _3)
  }), function (result) {
    if (result && result[constants["B" /* JSON_CONFIG */]]) {
      conf = result[constants["B" /* JSON_CONFIG */]];

      var _config = getActiveConfig(conf);

      forward[constants["B" /* JSON_CONFIG */]] = background_objectSpread({}, _config);
    }

    setIcon();
  });
  checkAndChangeIcons();
});
chrome.webRequest.onBeforeRequest.addListener(function (details) {
  if (forward[constants["t" /* DISABLED */]] !== enums["c" /* Enabled */].NO) {
    if (clearCacheEnabled) {
      clearCache();
    }

    return forward.onBeforeRequestCallback(details);
  }

  return {};
}, {
  urls: [constants["c" /* ALL_URLS */]]
}, [constants["e" /* BLOCKING */]]); // Breaking the CORS Limitation

chrome.webRequest.onHeadersReceived.addListener(headersReceivedListener, {
  urls: [constants["c" /* ALL_URLS */]]
}, [constants["e" /* BLOCKING */], constants["R" /* RESPONSE_HEADERS */]]);
chrome.webRequest.onBeforeSendHeaders.addListener(function (details) {
  return forward.onBeforeSendHeadersCallback(details);
}, {
  urls: [constants["c" /* ALL_URLS */]]
}, [constants["e" /* BLOCKING */], constants["Q" /* REQUEST_HEADERS */]]);

function setBadgeAndBackgroundColor(text, color) {
  var _chrome = chrome,
      browserAction = _chrome.browserAction;
  browserAction.setBadgeText({
    text: constants["v" /* EMPTY_STRING */] + text
  });
  browserAction.setBadgeBackgroundColor({
    color: color
  });
}

function setIcon() {
  if (parseError) {
    setBadgeAndBackgroundColor(enums["a" /* BadgeText */].ERROR, enums["d" /* IconBackgroundColor */].ERROR);
    return;
  }

  if (forward[constants["t" /* DISABLED */]] !== enums["c" /* Enabled */].NO) {
    setBadgeAndBackgroundColor(forward[constants["B" /* JSON_CONFIG */]][constants["O" /* PROXY_STORAGE_KEY */]].length, enums["d" /* IconBackgroundColor */].ON);
  } else {
    setBadgeAndBackgroundColor(enums["a" /* BadgeText */].OFF, enums["d" /* IconBackgroundColor */].OFF);
    return;
  }
}

function headersReceivedListener(details) {
  return forward.onHeadersReceivedCallback(details, corsEnabled);
}

function clearCache() {
  if (!clearRunning) {
    clearRunning = true;
    var millisecondsPerWeek = constants["G" /* MILLISECONDS_PER_WEEK */];
    var oneWeekAgo = new Date().getTime() - millisecondsPerWeek;
    chrome.browsingData.removeCache({
      since: oneWeekAgo
    }, function () {
      clearRunning = false;
    });
  }
}

function checkAndChangeIcons() {
  var isDarkMode = window.matchMedia(constants["l" /* DARK_MODE_MEDIA */]);

  if (isDarkMode && isDarkMode.matches) {
    chrome.browserAction.setIcon({
      path: constants["f" /* BLUE_ICON_PATH */]
    });
  } else {
    chrome.browserAction.setIcon({
      path: constants["y" /* GREY_ICON_PATH */]
    });
  }
} // check when extension is loaded


checkAndChangeIcons();

/***/ }),

/***/ "./src/chrome-storage.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChromeStorageManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getConfig; });
/* unused harmony export getActiveKeys */
/* unused harmony export setActiveKeys */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getConfigItems; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return setConfigItems; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return getEditingConfigKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return setEditingConfigKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return saveConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getChecked; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return setChecked; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return getOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return setOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return openLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return removeUnusedItems; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/_@babel_runtime@7.6.0@@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/constants.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/utils.ts");
/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/enums.ts");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




var ChromeStorageManager =
/*#__PURE__*/
function () {
  function ChromeStorageManager(props) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ChromeStorageManager);

    /**
    **  More details: https://developer.chrome.com/extensions/storage
    **
    **  Property limit between storage.sync and storage.local in QUOTA_BYTES:
    **  QUOTA_BYTES_PER_ITEM prop in storage.sync is 8,192 and
    **  QUOTA_BYTES prop in storage.sync is 102,400,
    **  which indicates the maximum total amount (in bytes) of data that can be stored in sync storage.sync.
    **  Updates that would cause this limit to be exceeded fail immediately and set runtime.lastError.
    **
    **  QUOTA_BYTES prop in storage.local is 5,242,880,
    **  which indicates the maximum amount (in bytes) of data that can be stored in local storage,
    **  as measured by the JSON stringification of every value plus every key's length.
    */
    this.storageFn = props.useChromeStorageSyncFn ? window.chrome.storage.sync : window.chrome.storage.local;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ChromeStorageManager, [{
    key: "get",
    value: function get(keyOrObj) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (args) {};
      this.storageFn.get(keyOrObj, callback);
    }
  }, {
    key: "set",
    value: function set(obj) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (args) {};
      this.storageFn.set(obj, callback);
    }
  }]);

  return ChromeStorageManager;
}();
var csmInstance = new ChromeStorageManager({
  useChromeStorageSyncFn: _constants__WEBPACK_IMPORTED_MODULE_3__[/* USE_CHROME_STORAGE_SYNC_FN */ "X"]
});
/**
 * 兼容chrome.storage.sync 历史数据的逻辑
 */

function checkAndSyncHistorialSyncStorageDataToLocal() {
  var _historyStorageKeyOrO;

  var historyStorageKeyOrObj = (_historyStorageKeyOrO = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_historyStorageKeyOrO, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"], {
    0: ''
  }), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_historyStorageKeyOrO, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"], {}), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_historyStorageKeyOrO, _constants__WEBPACK_IMPORTED_MODULE_3__[/* TAB_LIST */ "W"], [{
    id: '0',
    name: 'Current',
    active: true
  }]), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_historyStorageKeyOrO, _constants__WEBPACK_IMPORTED_MODULE_3__[/* ACTIVE_KEYS */ "b"], ['0']), _historyStorageKeyOrO);

  var migaratedFlag = _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL */ "V"], {
    migarated: false
  }); // Code below is only for migaration testing
  // 
  // csmInstance.set({
  //   [SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL]: {
  //     migarated: false,
  //   },
  // });


  csmInstance.get(migaratedFlag, function (result) {
    if (!result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL */ "V"]].migarated) {
      chrome.storage.sync.get(historyStorageKeyOrObj, function (hisData) {
        var _stash;

        var stash = (_stash = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_stash, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"], {}), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_stash, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"], {}), _stash);
        hisData[_constants__WEBPACK_IMPORTED_MODULE_3__[/* TAB_LIST */ "W"]].forEach(function (tab) {
          stash[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]][tab.id] = hisData[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]][tab.id];
          stash[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"]][tab.id] = hisData[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"]][tab.id];
        });
        csmInstance.set(_objectSpread(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL */ "V"], {
          migarated: true
        }), hisData, {}, stash));
      });
    } else {
      console.log('SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL');
    }
  });
}

checkAndSyncHistorialSyncStorageDataToLocal();
function getConfig(editingConfigKey) {
  return new Promise(function (resolve) {
    if (false) {}

    csmInstance.get(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"], {
      0: ''
    }), function (result) {
      if (typeof result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]] === 'string') {
        return resolve(result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]]);
      }

      resolve(result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]][editingConfigKey]);
    });
  });
}
function getActiveKeys() {
  return new Promise(function (resolve) {
    if (false) {}

    csmInstance.get(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* ACTIVE_KEYS */ "b"], ['0']), function (result) {
      resolve(result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* ACTIVE_KEYS */ "b"]]);
    });
  });
}
function setActiveKeys(keys) {
  if (true) {
    return new Promise(function (resolve) {
      csmInstance.set(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* ACTIVE_KEYS */ "b"], keys), resolve);
    });
  }
}
function getConfigItems() {
  return new Promise(function (resolve) {
    if (false) {}

    csmInstance.get(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* TAB_LIST */ "W"], [{
      id: '0',
      name: 'Current',
      active: true,
      editMode: 'editor'
    }]), function (result) {
      resolve(result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* TAB_LIST */ "W"]]);
    });
  });
}
function setConfigItems(items) {
  if (true) {
    return new Promise(function (resolve) {
      var _csmInstance$set2;

      csmInstance.set((_csmInstance$set2 = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$set2, _constants__WEBPACK_IMPORTED_MODULE_3__[/* TAB_LIST */ "W"], items.slice()), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$set2, _constants__WEBPACK_IMPORTED_MODULE_3__[/* ACTIVE_KEYS */ "b"], items.map(function (item) {
        if (item.active) {
          return item.id;
        }
      })), _csmInstance$set2), resolve);
    });
  }
}
function getEditingConfigKey() {
  return new Promise(function (resolve) {
    if (false) {}

    csmInstance.get(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* EDITING_CONFIG_KEY */ "u"], '0'), function (result) {
      resolve(result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* EDITING_CONFIG_KEY */ "u"]]);
    });
  });
}
function setEditingConfigKey(key) {
  if (true) {
    return new Promise(function (resolve) {
      csmInstance.set(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* EDITING_CONFIG_KEY */ "u"], key), resolve);
    });
  }
}
function saveConfig(jsonc, editingConfigKey) {
  var json = Object(_utils__WEBPACK_IMPORTED_MODULE_4__[/* JSONC2JSON */ "a"])(jsonc);

  if (true) {
    return new Promise(function (resolve) {
      var _csmInstance$get5;

      csmInstance.get((_csmInstance$get5 = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$get5, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"], {}), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$get5, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"], {}), _csmInstance$get5), function (result) {
        // migrate
        if (typeof result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]] === 'string') {
          result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]] = {};
          result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"]] = {};
        }

        result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]][editingConfigKey] = jsonc;
        Object(_utils__WEBPACK_IMPORTED_MODULE_4__[/* JSON_Parse */ "b"])(json, function (error, parsedJSON) {
          if (!error) {
            result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"]][editingConfigKey] = parsedJSON;
            return;
          }

          result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"]][editingConfigKey] = '';
        });
        csmInstance.set(result, resolve);
      });
    });
  }
}
function getChecked() {
  return new Promise(function (resolve) {
    if (false) {}

    csmInstance.get(_constants__WEBPACK_IMPORTED_MODULE_3__[/* DISABLED */ "t"], function (result) {
      resolve(result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* DISABLED */ "t"]]);
    });
  });
}
function setChecked(checked) {
  if (true) {
    return new Promise(function (resolve) {
      csmInstance.set(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, _constants__WEBPACK_IMPORTED_MODULE_3__[/* DISABLED */ "t"], checked ? _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].YES : _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].NO), resolve);
    });
  }
}
function getOptions() {
  return new Promise(function (resolve) {
    var _csmInstance$get6;

    if (false) { var _resolve4; }

    csmInstance.get((_csmInstance$get6 = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$get6, _constants__WEBPACK_IMPORTED_MODULE_3__[/* CLEAR_CACHE_ENABLED */ "h"], _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].YES), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$get6, _constants__WEBPACK_IMPORTED_MODULE_3__[/* CORS_ENABLED_STORAGE_KEY */ "j"], _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].YES), _csmInstance$get6), function (result) {
      var _resolve5;

      resolve((_resolve5 = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_resolve5, _constants__WEBPACK_IMPORTED_MODULE_3__[/* CLEAR_CACHE_ENABLED */ "h"], result.clearCacheEnabled), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_resolve5, _constants__WEBPACK_IMPORTED_MODULE_3__[/* CORS_ENABLED_STORAGE_KEY */ "j"], result.corsEnabled), _resolve5));
    });
  });
}
function setOptions(options) {
  if (true) {
    return new Promise(function (resolve) {
      csmInstance.set({
        clearCacheEnabled: options.clearCacheEnabled ? _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].YES : _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].NO,
        corsEnabled: options.corsEnabled ? _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].YES : _enums__WEBPACK_IMPORTED_MODULE_5__[/* Enabled */ "c"].NO
      }, resolve);
    });
  }
}
function openLink(url) {
  var isInner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  chrome.tabs.create({
    url: isInner ? chrome.extension.getURL(url) : url
  }, function (tab) {// Tab opened.
  });
}
function removeUnusedItems() {
  var _csmInstance$get7;

  csmInstance.get((_csmInstance$get7 = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$get7, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"], {}), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$get7, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"], {}), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_csmInstance$get7, _constants__WEBPACK_IMPORTED_MODULE_3__[/* TAB_LIST */ "W"], [{
    id: '0',
    name: 'Current',
    active: true,
    editMode: 'editor'
  }]), _csmInstance$get7), function (result) {
    var _stash2;

    var stash = (_stash2 = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_stash2, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"], {}), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_stash2, _constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"], {}), _stash2);
    result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* TAB_LIST */ "W"]].forEach(function (tab) {
      stash[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]][tab.id] = result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSONC_CONFIG */ "A"]][tab.id];
      stash[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"]][tab.id] = result[_constants__WEBPACK_IMPORTED_MODULE_3__[/* JSON_CONFIG */ "B"]][tab.id];
    });
    csmInstance.set(stash, function () {});
  });
}

/***/ }),

/***/ "./src/constants.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "P", function() { return REG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return ALL_URLS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return BLOCKING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Q", function() { return REQUEST_HEADERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R", function() { return RESPONSE_HEADERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return DEFAULT_CREDENTIALS_RESPONSE_HEADERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return CORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ACCESS_CONTROL_REQUEST_HEADERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return DEFAULT_CORS_ORIGIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return DEFAULT_CORS_METHODS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return DEFAULT_CORS_CREDENTIALS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "K", function() { return ORIGIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return DISABLED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return JSON_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return JSONC_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return EDITING_CONFIG_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "W", function() { return TAB_LIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ACTIVE_KEYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return CLEAR_CACHE_ENABLED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return CORS_STORAGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return CORS_ENABLED_STORAGE_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return PROXY_STORAGE_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return ENABLE_DOMAIN_STORAGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return MILLISECONDS_PER_WEEK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return RULE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return LANGUAGE_JSON; });
/* unused harmony export CHANGE */
/* unused harmony export DOM_CONTENT_LOADED */
/* unused harmony export SWITCH_DOM_ID */
/* unused harmony export SWITCH_INNER_DOM_ID */
/* unused harmony export SWITCH_AREA_DOM_ID */
/* unused harmony export NEW_TAB_DOM_ID */
/* unused harmony export OPEN_README_DOM_ID */
/* unused harmony export CONTAINER_DOM_ID */
/* unused harmony export STATUS_DOM_ID */
/* unused harmony export CLEAR_CACHE_ENABLED_DOM_ID */
/* unused harmony export CORS_ENABLED_DOM_ID */
/* unused harmony export SWITCH_CHECKED_CLASSNAME */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return POPUP_HTML_PATH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "N", function() { return PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I", function() { return MONACO_VS_PATH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "H", function() { return MONACO_CONTRIBUTION_PATH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return HELP_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return DEFAULT_FONT_FAMILY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L", function() { return PLATFORM_MAC; });
/* unused harmony export OPTIONS_SAVED */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return EMPTY_STRING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return KEY_DOWN; });
/* unused harmony export KEY_PRESSE */
/* unused harmony export CLICK */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return ANYTHING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return FORMAT_DOCUMENT_CMD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return KEY_CODE_S; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return KEY_CODE_M; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return SHOW_FOLDING_CONTROLS; });
/* unused harmony export OPACITY_VISIBLE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "J", function() { return NULL_STRING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "T", function() { return RULE_COMPLETION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return DEFAULT_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return DEFAULT_DUP_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return USE_CHROME_STORAGE_SYNC_FN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "V", function() { return SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return BLUE_ICON_PATH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return GREY_ICON_PATH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return DARK_MODE_MEDIA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return BUILD_AST_DECLARATION_PREFIX; });
var REG = {
  TRIM_JSON: /(,+)([^a-z0-9["])/gi,
  CHROME_EXTENSION: /^chrome-extension:\/\//i,
  // support [ ] ( ) \ * ^ $
  FORWARD: /\\|\[|]|\(|\)|\*|\$|\^/i,
  WHITESPACE: /\s+/g,
  X_HEADER: /^x-/
};
var ALL_URLS = '<all_urls>';
var BLOCKING = 'blocking';
var REQUEST_HEADERS = 'requestHeaders';
var RESPONSE_HEADERS = 'responseHeaders';
var DEFAULT_CREDENTIALS_RESPONSE_HEADERS = 'Content-Type, access-control-allow-headers, Authorization, X-Requested-With, X-Referer';
var CORS = {
  METHODS: 'access-control-allow-methods',
  CREDENTIALS: 'access-control-allow-credentials',
  ORIGIN: 'access-control-allow-origin',
  HEADERS: 'access-control-allow-headers'
};
var ACCESS_CONTROL_REQUEST_HEADERS = 'access-control-request-headers';
var DEFAULT_CORS_ORIGIN = '*';
var DEFAULT_CORS_METHODS = '*';
var DEFAULT_CORS_CREDENTIALS = 'true';
var ORIGIN = 'origin';
/**
 * Disabled storage key
 */

var DISABLED = 'disabled';
/**
 * pure JSON storage key
 */

var JSON_CONFIG = 'config';
/**
 * JSON with comments storage key
 */

var JSONC_CONFIG = 'config_for_shown';
var EDITING_CONFIG_KEY = 'config_editing_key';
var TAB_LIST = 'tab_list';
var ACTIVE_KEYS = 'active_keys';
var CLEAR_CACHE_ENABLED = 'clearCacheEnabled';
var CORS_STORAGE = 'cors';
var CORS_ENABLED_STORAGE_KEY = 'corsEnabled';
var PROXY_STORAGE_KEY = 'proxy';
var ENABLE_DOMAIN_STORAGE = 'enable';
var MILLISECONDS_PER_WEEK = 1000 * 60 * 60 * 24 * 7;
var RULE = 'rule';
var LANGUAGE_JSON = 'json';
var CHANGE = 'change';
var DOM_CONTENT_LOADED = 'DOMContentLoaded';
var SWITCH_DOM_ID = 'J_Switch';
var SWITCH_INNER_DOM_ID = 'J_SwitchInner';
var SWITCH_AREA_DOM_ID = 'J_SwitchArea';
var NEW_TAB_DOM_ID = 'J_OpenInNewTab';
var OPEN_README_DOM_ID = 'J_OpenReadme';
var CONTAINER_DOM_ID = 'J_Container';
var STATUS_DOM_ID = 'J_Status';
var CLEAR_CACHE_ENABLED_DOM_ID = 'J_ClearCacheEnabled';
var CORS_ENABLED_DOM_ID = 'J_CorsEnabled';
var SWITCH_CHECKED_CLASSNAME = 'ant-switch-checked';
var POPUP_HTML_PATH = 'XSwitch.html';
var PREFIX =  false ? undefined : './';
var MONACO_VS_PATH =  false ? undefined : './lib/monaco-editor/min/vs';
var MONACO_CONTRIBUTION_PATH = 'vs/language/json/monaco.contribution';
var HELP_URL = 'https://yuque.com/jiushen/blog/xswitch-readme';
var DEFAULT_FONT_FAMILY = 'Menlo, Monaco, "Courier New", monospace';
var PLATFORM_MAC = 'Mac';
var OPTIONS_SAVED = 'Options saved.';
var EMPTY_STRING = '';
var KEY_DOWN = 'keydown';
var KEY_PRESSE = 'keypress';
var CLICK = 'click';
var ANYTHING = 'anyString';
var FORMAT_DOCUMENT_CMD = 'editor.action.formatDocument';
var KEY_CODE_S = 83;
var KEY_CODE_M = 77;
var SHOW_FOLDING_CONTROLS = 'always';
var OPACITY_VISIBLE = '1';
var NULL_STRING = 'null';
var RULE_COMPLETION = "[\n  \"${1:from}\",\n  \"${1:to}\",\n],";
var DEFAULT_DATA = "{\n  // Use IntelliSense to learn about possible links.\n  // Type `rule` to quick insert rule.\n  // \u8F93\u5165 rule \u6765\u5FEB\u901F\u63D2\u5165\u89C4\u5219\n  // For more information, visit: https://github.com/yize/xswitch\n  \"proxy\": [\n    [\n      \"https://unpkg.com/react@16.4.1/umd/react.production.min.js\",\n      \"https://unpkg.com/react@16.4.1/umd/react.development.js\"\n    ],\n    // `Command/Ctrl + click` to visit:\n    // https://unpkg.com/react@16.4.1/umd/react.production.min.js\n    // [\n      // \"(.*)/path1/path2/(.*)\", // https://www.sample.com/path1/path2/index.js\n      // \"http://127.0.0.1:3000/$2\", // http://127.0.0.1:3000/index.js\n    // ],\n  ],\n  // urls that want CORS\n  // \"cors\": [\n    // \"mocks.a.com\",\n    // \"mocks.b.com\"\n  // ]\n}\n";
var DEFAULT_DUP_DATA = "{\n  \"proxy\": [\n    [\n      \"(.*)/path1/path2/(.*)\", // https://www.sample.com/path1/path2/index.js\n      \"http://127.0.0.1:3000/$2\", // http://127.0.0.1:3000/index.js\n    ],\n  ],\n}\n"; // false: 使用chrome.storage.sync.get/set
// true:  使用chrome.storage.local.get/set

var USE_CHROME_STORAGE_SYNC_FN = false;
/**
 * check if old config rules saving by chrome.storage.sync.set function have been migarated
 */

var SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL = 'sync_storage_data_has_been_migarated_to_local';
var BLUE_ICON_PATH = 'images/blue_128.png';
var GREY_ICON_PATH = 'images/grey_128.png';
var DARK_MODE_MEDIA = '(prefers-color-scheme: dark)';
var BUILD_AST_DECLARATION_PREFIX = "const mySpecialASTSourceObj = ";

/***/ }),

/***/ "./src/enums.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return UrlType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Enabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return IconBackgroundColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BadgeText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return EditModeEnum; });
var UrlType;

(function (UrlType) {
  UrlType["REG"] = "reg";
  UrlType["STRING"] = "string";
})(UrlType || (UrlType = {}));

var Enabled;

(function (Enabled) {
  Enabled["YES"] = "enabled";
  Enabled["NO"] = "disabled";
})(Enabled || (Enabled = {}));

var IconBackgroundColor;

(function (IconBackgroundColor) {
  IconBackgroundColor["ON"] = "#1890ff";
  IconBackgroundColor["OFF"] = "#bfbfbf";
  IconBackgroundColor["ERROR"] = "#f5222d";
})(IconBackgroundColor || (IconBackgroundColor = {}));

var BadgeText;

(function (BadgeText) {
  BadgeText["ERROR"] = "Error";
  BadgeText["OFF"] = "OFF";
  BadgeText["ON"] = "ON";
})(BadgeText || (BadgeText = {}));

var EditModeEnum;

(function (EditModeEnum) {
  EditModeEnum["EDITOR"] = "editor";
  EditModeEnum["FORM"] = "form";
})(EditModeEnum || (EditModeEnum = {}));

/***/ }),

/***/ "./src/utils.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./src/constants.ts
var constants = __webpack_require__("./src/constants.ts");

// CONCATENATED MODULE: ./src/strip-json-comments.ts
 // https://github.com/sindresorhus/strip-json-comments

var singleComment = 1;
var multiComment = 2;

var strip_json_comments_stripWithoutWhitespace = function stripWithoutWhitespace() {
  return constants["v" /* EMPTY_STRING */];
};

var stripWithWhitespace = function stripWithWhitespace(str, start, end) {
  return str.slice(start, end).replace(/\S/g, ' ');
};

function stripJsonComments(str, opts) {
  opts = opts || {};
  var strip = opts.whitespace === false ? strip_json_comments_stripWithoutWhitespace : stripWithWhitespace;
  var insideString = false;
  var insideComment = false;
  var offset = 0;
  var ret = constants["v" /* EMPTY_STRING */];

  for (var i = 0; i < str.length; i++) {
    var currentChar = str[i];
    var nextChar = str[i + 1];

    if (!insideComment && currentChar === '"') {
      var escaped = str[i - 1] === '\\' && str[i - 2] !== '\\';

      if (!escaped) {
        insideString = !insideString;
      }
    }

    if (insideString) {
      continue;
    }

    if (!insideComment && currentChar + nextChar === '//') {
      ret += str.slice(offset, i);
      offset = i;
      insideComment = singleComment;
      i++;
    } else if (insideComment === singleComment && currentChar + nextChar === '\r\n') {
      i++;
      insideComment = false;
      ret += strip(str, offset, i);
      offset = i;
      continue;
    } else if (insideComment === singleComment && currentChar === '\n') {
      insideComment = false;
      ret += strip(str, offset, i);
      offset = i;
    } else if (!insideComment && currentChar + nextChar === '/*') {
      ret += str.slice(offset, i);
      offset = i;
      insideComment = multiComment;
      i++;
      continue;
    } else if (insideComment === multiComment && currentChar + nextChar === '*/') {
      i++;
      insideComment = false;
      ret += strip(str, offset, i + 1);
      offset = i + 1;
      continue;
    }
  }

  return ret + (insideComment ? strip(str.substr(offset), 0, 0) : str.substr(offset));
}
// CONCATENATED MODULE: ./src/utils.ts
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return JSONC2JSON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return JSON_Parse; });
/* unused harmony export flattenArray */


function JSONC2JSON(jsonc) {
  return stripJsonComments(jsonc).replace(constants["P" /* REG */].WHITESPACE, constants["v" /* EMPTY_STRING */]).replace(constants["P" /* REG */].TRIM_JSON, function ($0, $1, $2) {
    return $2;
  });
}
function JSON_Parse(json, cb) {
  try {
    cb(false, JSON.parse(json));
  } catch (e) {
    cb(e);
  }
}
function flattenArray(arr) {
  var result = [];
  arr.forEach(function (item) {
    if (Array.isArray(item)) {
      result = result.concat(flattenArray(item));
    } else {
      result.push(item);
    }
  });
  return result;
}

/***/ })

/******/ });
//# sourceMappingURL=background.min.js.map